#!/bin/bash
# git.br

shopt -s nullglob dotglob     # To include hidden files. Needed?
echo; echo "Welcome to Bashful Rails command line extension for git"

if (( $# == 0 )); then 
   echo; echo "The first argument dictates what task you want to execute:"
   echo "Run any of these without a second argument to get more information:"

elif (( $# > 0 )); then 
   
   #  BEGIN - find git project root and cd to it:
   DIR=${PWD}
   TARGET="$DIR/.git"
   # This checks if the current working directory contains .git/  
   until [ "$(ls -a $TARGET 2> /dev/null)" ] # 2> /dev/null suppresses errors
    do
      DIR=`dirname $DIR` # .git not found. move up
      TARGET="$DIR/.git" 
      if [ $DIR = "/" ]; then 
         break;
      fi
   done
   if [ $DIR = "/" ]; then 
      echo "error: no git project found"; echo
    else
      cd $DIR
      printf "git project detected at: "
      echo $DIR; echo
   fi
   #  END - find git project root and cd to it
   
###### git.br push -------------------------------------------------------######
   if [ $1 == "save" ]; then
      remote='origin'
      branch=`git rev-parse --abbrev-ref HEAD`
      msg=''
      input=''
      if (( $# == 1 )); then 
         echo; echo "This will run:"
         printf "\t$ git status; git add . -A; git status # with prompt to continue!\n"
         printf "\t$ git commit -m 'your 2nd arg'         # you'll have a chance to revise the message\n"
         printf "\t$ git push [3th-arg] ${branch}          # if you don't arg 3, 'origin' will be used\n\n" 
         echo "You do not need to be at the project's root directory for this command"
      fi
      if (( $# > 1 )); then 
         echo "more args than 1"
         $mgs=$2
         while true; do
            read msg; echo
            echo "you entered $msg."
            printf "hit enter to continue or enter a different message"
            read input
            if [[ -n $temp ]]; then $msg=$input
             else break;
            fi
         done
      fi
      if (( $# > 2 )); then  $remote=$3; fi
      echo; echo "running $ git status; git add . -A; git status ..."
      git status; git add . -A; git status;
      input=''
      printf "hit enter push to continue or ctrl-c to abort"
      read input
      if [[ -n $temp ]]; then
         git commit -m "$msg"; 
         git push origin $branch;
      fi
   fi
###### git.br c -------------------------------------------------------######
   # if [ $1 == "c" ]; then
   # echo; 
   # fi
fi


# alias gmv='git mv'                                  # gmv git mv;
# alias gc='git checkout'                             # gc  git checkout;  
# alias gs='git status'                               # gs  git status;  
# alias gu='git checkout --force; git status'         # gu  git undo
# alias gm='git merge'                                # gm  git merge;  
# alias gb='git branch'                               # gb  git branch;
# alias ga='git add . -A; git status'                 # ga  git add;  
# alias gac='ga; gcm'                                 # same as gacm;
# alias gcm='git commit -m'                           # gcm git commit message;
# alias gce='git commit'                              # gcm git commit (editor);
# alias gacm='ga; gcm'                                # gacm git add commit message;
# alias gace='ga; gce'                                # gace git add commit (editor);
# alias gracm='rpa; ga; gcm'                          # gracm git rails add commit message;
# alias grace='rpa; ga; gce'                          # grace git rails add commit (editor);
# alias gp='git push'                                 # gp git push;
# alias gph='git push heroku'                         # gph git push heroku;
# alias gpo='git push origin'                         # gpo git push origin;
#!/bin/bash
######--------------------------------------------######
######  By Jeff Russ https://github.com/Jeff-Russ ######
######--------------------------------------------######
# git.bq


shopt -s nullglob dotglob     # To include hidden files. Needed?
echo; echo "Welcome to bashquicks command line extension for git"; echo

ORIG_DIR=${PWD}

#  BEGIN - find git project root and cd to it:
# This checks if the current working directory or anything above it contains .git/  
GIT_DIR=${PWD}
TARGET="$GIT_DIR/.git"
until [ "$(ls -a $TARGET 2> /dev/null)" ] # 2> /dev/null suppresses errors
 do
   GIT_DIR=`dirname $GIT_DIR`
   TARGET="$GIT_DIR/.git"
   
   if [ $GIT_DIR = "/" ]; then break; fi # we hit disk root: falure
done
if [ $GIT_DIR = "/" ]; then printf "\nNo git projectect found\n"; GIT=0
 else
   GIT=1
   cd $GIT_DIR
   PROJ=${PWD##*/} 
   REMOTE='origin'
   BRANCH=`git rev-parse --abbrev-ref HEAD`
   MSG=''
   input=''
fi
#  END - find git project root and cd to it


if (( $# > 0 )); then MSG="$1"
   if (( $# > 1 )); then REMOTE="$2";
      if (( $# > 2 )); then BRANCH="$3"; fi
   fi
fi
while true; do
   printf "\nroot:\t'${PROJ}'\nBRANCH:\t'${BRANCH}'\nREMOTE:\t'${REMOTE}'\nMESSAGE\t'${MSG}'"
   printf "\n\n [b] change BRANCH\t[n] use new BRANCH\t[r] change REMOTE\t[m] change MESSAGE"
   printf "\n [b?] show BRANCHES\t[r?] show REMOTES\t[nr] add REMOTE"
   printf "\n [enter] add . -A\t[ctrl-c] abort\n\nyour selection: "
   read selection
   if [ "$selection" == "b" ]; then
      printf "enter BRANCH name: "
      read temp 
      if [ $temp != $BRANCH ]; then
         BRANCH=$temp
         git checkout $BRANCH
      fi
    elif [ "$selection" == "n" ]; then
      printf "enter new BRANCH name: "
      read temp
      if [ $temp != $BRANCH ]; then 
         BRANCH=$temp
         git checkout -b $BRANCH
      fi
    elif [ "$selection" == "r" ]; then
      printf "enter a new REMOTE: "; read REMOTE
    elif [ "$selection" == "m" ]; then
      printf "enter MESSAGE surrounded by quotes: "; read MSG
    elif [[ -z $selection ]]; then break;
    else printf "huh?\n"
   fi
done

git status; git add . -A; git status;
temp=''
printf "\n\n [enter] push\t[ctrl-c] abort\n\nyour selection: "
read input
if [[ -n $temp ]]; then
   git commit -m "$MSG"; git push $REMOTE $BRANCH;
fi
